#!/bin/bash

if git rev-parse --verify HEAD &> /dev/null ; then
  against=HEAD
else
  against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

exit_code=0

for file in $(git diff-index --cached --name-only -z ${against}); do
  # Run shellcheck on shell scripts
  if command -v shellcheck &> /dev/null ; then
    if [[ "${file}" == "*.sh" ]] || [[ "${file}" == "*.bash" ]] || [[ "${file}" == "*.ksh" ]] || [[ '#!/bin/bash' == $(head -n1 "${file}") ]] || [[ '#!/bin/sh' == $(head -n1 "${file}") ]]|| [[ '#!/bin/ksh' == $(head -n1 "${file}") ]]; then
      ret_comment=$(shellcheck "${file}")
      ret_code=$?
      if [[ ${exit_code} -eq 0 ]] && [[ ${ret_code} -ne 0 ]]; then
        echo "ERROR: ${ret_comment}"
        exit_code=1
      fi
    fi
  fi

  # Run ansible-vault check for vaulted files
  if [[ "${file}" == "vault_*" ]] || [[ "${file}" == "*.vault" ]]; then
    file_status_index=$(git status --porcelain -- "$file" 2>&1 | cut -c1-2)
    file_status_index=${file_status_index:0:1}
    # shellcheck disable=SC2016
    if [[ "$file_status_index" != 'D' ]] && ! head -n1 "${file}" | grep -q '^\$ANSIBLE_VAULT;' ; then
      echo "ERROR: ${file} is not encrypted"
      exit_code=1
    fi
  fi
done

exit ${exit_code}
